List是Python中常用的数据类型，它一个有序集合，即其中的元素始终保持着初始时的定义的顺序（除非你对它们进行排序或其他修改操作）。

List添加元素方法有如下4种方法：append(),extend(),insert(), '+'加号。
1. append() 追加单个元素到List的尾部，只接受一个参数，参数可以是任何数据类型，被追加的元素在List中保持着原结构类型。
2. extend() 将一个列表中每个元素分别添加到另一个列表中，只接受一个参数；
注意：extend与append的区别就是extend可以同时添加多个元素
3. insert() 将一个元素插入到列表中，但其参数有两个（如insert(1,”g”)），第一个参数是索引点，即插入的位置，第二个参数是插入的元素。
4. + 加号，将两个list相加，会返回到一个新的list对象，注意与前三种的区别。前面三种方法（append, extend, insert）可对列表增加元素的操作，他们没有返回值，是直接修改了原数据对象。 注意：将两个list相加，需要创建新的list对象，从而需要消耗额外的内存，特别是当list较大时，尽量不要使用“+”来添加list，而应该尽可能使用List的append()方法。

List删除元素的几种方法：
1.使用del删除对应下标的元素   del li[2]
2.使用.pop()删除最后一个元素  li.pop()
3.使用.remove()删除指定值的元素   li.remove(4)
4.使用切片来删除                     li = li[:-1]# !!!切忌使用这个方法，如果li被作为参数传入函数，那么在函数内使用这种删除方法，将不会改变原list
li = [1,2,3,4,5,6]
def delete(li, index):
    li = li[:index] + li[index+1:]
delete(li, 3)
print li
# 会输出[1,2,3,4,5,6]

List的查找、排序与反转：
查找方法：1、使用index()属性。2、使用保留字“in”来判断元素是否在列表中。
排序和反转的方法：调用sort()会改变原列表，sort() 提供了参数reverse 用于控制元素排序的顺序，如果不提供参数，默认采用首字母升序排序。如果设置参数reverse=Ture,则采用首字母降序排列。
sorted(list)不会改变原列表