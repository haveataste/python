python编程时，经常和文件、目录打交道，这是就离不了os模块。os模块包含普遍的操作系统功能，与具体的平台无关。以下列举常用的方法：
os.name――判断现在正在实用的平台，Windows 返回 ‘nt'; Linux 返回’posix'
os.getcwd()――得到当前工作的目录。（get current work dir)
os.listdir()――指定所有目录下所有的文件和目录名。以列表的形式全部列举出来，其中没有区分目录和文件。
os.chdir()――改变目录到指定目录
os.remove()――删除指定文件
os.rmdir()――删除指定目录
os.mkdir()――创建目录。只能建立一层，要想递归建立可用：os.makedirs()
os.path.isfile()――判断指定对象是否为文件。是返回True,否则False
os.path.isdir()――判断指定对象是否为目录。是True,否则False。
os.path.exists()――检验指定的对象是否存在。是True,否则False。
os.path.split()――返回路径的目录和文件名。此处只是把前后两部分分开而已。就是找最后一个'/'。
    >>> import os
    >>> os.path.split("a/b/c/d")
    ('a/b/c', 'd')
    >>> os.path.split("a/b/c/d/")
    ('a/b/c/d', '')
os.path.getsize()――获得文件的大小，如果为目录，返回0
os.path.abspath()――获得绝对路径。
os.path.join(path, name)――连接目录和文件名。
os.path.basename(path)――返回文件名
os.path.dirname(path)――返回文件路径
获得程序所在的实际目录
    import os
    import sys
    if __name__ == "__main__":
        print os.path.realpath(sys.argv[0])
        print os.path.split(os.path.realpath(sys.argv[0]))
        print os.path.split(os.path.realpath(sys.argv[0]))[0]

    /home/jihite/ftp/del.py
    ('/home/jihite/ftp', 'del.py')
    /home/jihite/ftp
os.system()――执行shell命令。
注意：此处运行shell命令时，如果要调用python之前的变量，可以用如下方式：
    var=123
    os.environ['var']=str(var) //注意此处[]内得是 “字符串”
    os.system('echo $var')

文件操作：
os.mknod("test.txt") 创建空文件
fp = open("test.txt",'w') 直接打开一个文件，如果文件不存在则创建文件
关于open 模式：
w 以写方式打开，
a 以追加模式打开 (从 EOF 开始, 必要时创建新文件)
r+ 以读写模式打开
w+ 以读写模式打开 (参见 w )
a+ 以读写模式打开 (参见 a )
rb 以二进制读模式打开
wb 以二进制写模式打开 (参见 w )
ab 以二进制追加模式打开 (参见 a )
rb+ 以二进制读写模式打开 (参见 r+ )
wb+ 以二进制读写模式打开 (参见 w+ )
ab+ 以二进制读写模式打开 (参见 a+ )

fp.read([size]) #size为读取的长度，以byte为单位
fp.readline([size]) #读一行，如果定义了size，有可能返回的只是一行的一部分
fp.readlines([size]) #把文件每一行作为一个list的一个成员，并返回这个list。其实它的内部是通过循环调用readline()来实现的。如果提供size参数，size是表示读取内容的总长，也就是说可能只读到文件的一部分。
fp.write(str) #把str写到文件中，write()并不会在str后加上一个换行符
fp.writelines(seq) #把seq的内容全部写到文件中(多行一次性写入)。这个函数也只是忠实地写入，不会在每行后面加上任何东西。
fp.close() #关闭文件。python会在一个文件不用后自动关闭文件，不过这一功能没有保证，最好还是养成自己关闭的习惯。 如果一个文件在关闭后还对其进行操作会产生ValueError

import os
os.getcwd()
os.listdir(os.getcwd())
os.remove()
os.removedirs(path)
os.chdir(path)
os.mkdir(path)
os.rmdir(path)
os.rename(oldname,newname)
root,dirs,files=os.walk("D:/")

import os.path
os.path.isfile()
os.path.isdir()
os.path.exists()
os.path.splitext()
os.path.split()
os.path.dirname()
os.path.basename()
os.path.getsize()
os.path.join(path,name)